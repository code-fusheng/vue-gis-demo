import{d as g,ac as m,m as u,a6 as h,a_ as C,b1 as p,cw as y,cx as D,Q as b,P as F,h as _,J as E}from"./Select-73cfa6a9.js";class R extends g{constructor(t){super({attributions:t.attributions,wrapX:t.wrapX}),this.resolution=void 0,this.distance=t.distance!==void 0?t.distance:20,this.minDistance=t.minDistance||0,this.interpolationRatio=0,this.features=[],this.geometryFunction=t.geometryFunction||function(s){const e=s.getGeometry();return m(e.getType()=="Point",10),e},this.createCustomCluster_=t.createCluster,this.source=null,this.boundRefresh_=this.refresh.bind(this),this.updateDistance(this.distance,this.minDistance),this.setSource(t.source||null)}clear(t){this.features.length=0,super.clear(t)}getDistance(){return this.distance}getSource(){return this.source}loadFeatures(t,s,e){this.source.loadFeatures(t,s,e),s!==this.resolution&&(this.resolution=s,this.refresh())}setDistance(t){this.updateDistance(t,this.minDistance)}setMinDistance(t){this.updateDistance(this.distance,t)}getMinDistance(){return this.minDistance}setSource(t){this.source&&this.source.removeEventListener(u.CHANGE,this.boundRefresh_),this.source=t,t&&t.addEventListener(u.CHANGE,this.boundRefresh_),this.refresh()}refresh(){this.clear(),this.cluster(),this.addFeatures(this.features)}updateDistance(t,s){const e=t===0?0:Math.min(s,t)/t,i=t!==this.distance||this.interpolationRatio!==e;this.distance=t,this.minDistance=s,this.interpolationRatio=e,i&&this.refresh()}cluster(){if(this.resolution===void 0||!this.source)return;const t=E(),s=this.distance*this.resolution,e=this.source.getFeatures(),i={};for(let r=0,o=e.length;r<o;r++){const n=e[r];if(!(h(n)in i)){const a=this.geometryFunction(n);if(a){const l=a.getCoordinates();C(l,t),p(t,s,t);const d=this.source.getFeaturesInExtent(t).filter(function(f){const c=h(f);return c in i?!1:(i[c]=!0,!0)});this.features.push(this.createCluster(d,t))}}}}createCluster(t,s){const e=[0,0];for(let n=t.length-1;n>=0;--n){const a=this.geometryFunction(t[n]);a?y(e,a.getCoordinates()):t.splice(n,1)}D(e,1/t.length);const i=b(s),r=this.interpolationRatio,o=new F([e[0]*(1-r)+i[0]*r,e[1]*(1-r)+i[1]*r]);return this.createCustomCluster_?this.createCustomCluster_(o,t):new _({geometry:o,features:t})}}const S=R,x=Object.freeze(Object.defineProperty({__proto__:null,default:S},Symbol.toStringTag,{value:"Module"}));export{S as C,x as a};
